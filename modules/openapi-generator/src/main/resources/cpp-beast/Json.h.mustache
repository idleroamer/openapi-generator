#pragma once

#include <nlohmann/json.hpp>

{{#cppNamespaceDeclarations}}
namespace {{this}} { // NOLINT(readability-identifier-naming)
{{/cppNamespaceDeclarations}}

using json = nlohmann::json;

template<typename T>
[[nodiscard]] std::string toString(const T& obj)
{
    json j = obj;
    return j.dump();
}

template<typename T>
void fromString(const std::string& jsonStr, T &obj)
{
    auto j = json::parse(jsonStr);
    obj = j.get<T>();
}

{{#cppNamespaceDeclarations}}
}
{{/cppNamespaceDeclarations}}
